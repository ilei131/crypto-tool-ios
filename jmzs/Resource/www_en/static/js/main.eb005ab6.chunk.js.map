{"version":3,"sources":["App.js","js/main.js","serviceWorker.js","index.js"],"names":["App","props","hidemsg","e","state","esecret","epass","emsg","hmac","encrypt","document","getElementById","setCustomValidity","includes","split","length","preventDefault","btn","data","setState","progress","hidden","StegCloak","hide","message","key","cover","rmsg","demsg","pass","reveal","dmsg","dpass","dsecret","copyClip","clip","select","setSelectionRange","execCommand","docs","cl","querySelector","retRes","style","width","className","htmlFor","height","onMouseEnter","opacity","onMouseLeave","id","onClick","aria-hidden","data-prefix","data-icon","role","xmlns","viewBox","d","marginBottom","name","value","readOnly","retBtn","msgbox","err","addEventListener","classList","toggle","$","each","this","on","validate","showValidate","parent","addClass","input","attr","val","trim","match","thisAlert","append","hideValidate","removeClass","find","remove","check","i","focus","main","position","type","placeholder","onChange","target","required","disabled","cursor","textAlign","Component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.eb005ab6.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./vendor/bootstrap/css/bootstrap.min.css\";\n// import \"./fonts/iconic/css/material-design-iconic-font.min.css\";\n// import \"./fonts/font-awesome-4.7.0/css/font-awesome.min.css\";\nimport \"./vendor/css-hamburgers/hamburgers.min.css\";\nimport \"./vendor/animate/animate.css\";\nimport \"./vendor/select2/select2.min.css\";\nimport \"./vendor/animsition/css/animsition.min.css\";\nimport \"./vendor/daterangepicker/daterangepicker.css\";\nimport \"./css/util.css\";\nimport \"./css/main.css\";\nimport main from \"./js/main.js\";\n//import worker from \"./worker.js\";\n//import WebWorker from \"./workerSetup\";\n// import cog from \"./images/cogwheels.svg\";\n// import StegIcon from \"./images/stegicon.svg\";\nimport GitHubButton from \"react-github-btn\";\n// import you from \"./images/youtube_social_icon_dark.png\"\n// const StegCloak = require('stegcloak');\nimport StegCloak from \"stegcloak\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      esecret: \"Your secret!!\",\n      epass: \"\",\n      encrypt: true,\n      hmac: false,\n      emsg: \"This is a confidential message.\",\n      rmsg: \"\",\n      dpass: \"\",\n      dmsg: \"\",\n      dsecret: \"Secret\",\n      msgbox: \"MESSAGE *\",\n      btn: \"Hide\",\n      progress: false,\n      err: \"\",\n    };\n  }\n  componentDidMount() {\n    //this.worker = new WebWorker(worker);\n    main();\n  }\n  hidemsg = (e) => {\n    var { esecret, epass, emsg, hmac, encrypt } = this.state;\n    if (epass == \"\" && encrypt) {\n      let pass = document.getElementById(\"password\");\n      pass.setCustomValidity(\"Please add password, else uncheck encrypted\");\n      return;\n    }\n    if (\n      !emsg.includes(\" \") ||\n      (emsg.includes(\" \") && emsg.split(\" \")[1].length == 0)\n    ) {\n      let msg = document.getElementById(\"message\");\n      msg.setCustomValidity(\"Cover message should contain at least 2 words!\");\n      return;\n    }\n    e.preventDefault();\n    if (this.state.btn == \"Hide\") {\n      let data = {};\n      data[\"message\"] = esecret;\n      data[\"key\"] = epass;\n      if (!emsg.includes(\" \")) {\n        emsg = emsg + \" \";\n      }\n      data[\"cover\"] = emsg;\n      this.setState({ progress: true });\n      //this.worker.postMessage({ enc: true, data, hmac, encrypt });\n      const stegcloak = new StegCloak(encrypt, hmac);\n      let hidden = stegcloak.hide(data.message, data.key, data.cover)\n      this.setState({ rmsg: hidden, btn: \"Clear\", progress: false });\n      // this.worker.addEventListener(\"message\", (e) => {\n      //   if (e.data.enc) {\n      //     let hidden = e.data.emsg;\n      //     this.setState({ rmsg: hidden, btn: \"Clear\", progress: false });\n      //   }\n      // });\n    } else {\n      this.setState({ btn: \"Hide\", rmsg: \"\", emsg: \"\" });\n    }\n  };\n  demsg = (e) => {\n    e.preventDefault();\n    // this.worker.postMessage({\n    //   enc: false,\n    //   dmsg: this.state.dmsg,\n    //   pass: this.state.dpass,\n    // });\n    // this.worker.addEventListener(\"message\", (e) => {\n    //   if (!e.data.enc) {\n    //     this.setState({ dsecret: e.data.pass });\n    //   }\n    // });\n    const stegcloak = new StegCloak();  // Initializes with encryption true and hmac false for hiding\n    const pass = stegcloak.reveal(this.state.dmsg, this.state.dpass);\n    this.setState({ dsecret: pass });\n  };\n  copyClip = (e) => {\n    e.preventDefault();\n    let clip = document.getElementById(\"res\");\n    clip.select();\n    clip.setSelectionRange(0, 99999);\n    document.execCommand(\"copy\");\n  };\n  docs = (cl) => {\n    return document.querySelector(cl);\n  };\n  retRes = () => {\n    return (\n      <div style={{ width: \"inherit\" }}>\n        <div className=\"flex-sb label-input100\">\n          <label className=\"\" htmlFor=\"res\">\n            encrypted message*\n          </label>\n          <button\n            style={{ width: \"20px\", height: \"25px\" }}\n            onMouseEnter={() => (this.docs(\".copy\").style.opacity = 1)}\n            onMouseLeave={() => (this.docs(\".copy\").style.opacity = 0)}\n            id=\"clip\"\n            className=\"m-l-10 \"\n            onClick={(e) => this.copyClip(e)}\n          >\n            <svg\n              aria-hidden=\"true\"\n              data-prefix=\"far\"\n              data-icon=\"copy\"\n              role=\"img\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 448 512\"\n            >\n              <path d=\"M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM266 464H54a6 6 0 0 1-6-6V150a6 6 0 0 1 6-6h74v224c0 26.51 21.49 48 48 48h96v42a6 6 0 0 1-6 6zm128-96H182a6 6 0 0 1-6-6V54a6 6 0 0 1 6-6h106v88c0 13.255 10.745 24 24 24h88v202a6 6 0 0 1-6 6zm6-256h-64V48h9.632c1.591 0 3.117.632 4.243 1.757l48.368 48.368a6 6 0 0 1 1.757 4.243V112z\"></path>\n            </svg>\n          </button>\n          <div className=\"copy\">\n            <span>Copy to Clipboard</span>\n          </div>\n        </div>\n        <div style={{ marginBottom: \"15px\" }} className=\"wrap-input100 \">\n          <textarea\n            id=\"res\"\n            className=\"input100\"\n            name=\"message\"\n            value={this.state.rmsg}\n            readOnly={true}\n          ></textarea>\n          <span className=\"focus-input100\"></span>\n        </div>\n        <p className=\"d-input100\">Copy and paste this anywhere.....</p>\n      </div>\n    );\n  };\n  retBtn = () => {\n    return (\n      <div className=\"container-contact100-form-btn m-b-25\">\n        <button\n          className=\"contact100-form-btn validate-form\"\n          onClick={(e) => this.hidemsg(e)}\n        >\n          <span>\n            {this.state.btn}\n            <i className=\"zmdi zmdi-arrow-right m-l-8\"></i>\n          </span>\n        </button>\n      </div>\n    );\n  };\n\n  render() {\n    return (\n      <div className=\"container-contact100\">\n        <div style={{ position: \"relative\" }} className=\"wrap-contact100\">\n          <form className=\"contact100-form validate-form\">\n            <p className=\" p-input100 text-center m-t-35\"> HIDE </p>\n            <hr className=\"hr-input100 m-t-2\" />\n            <div className=\"rs1 next\">\n              <label className=\"fs-18 text-center p-b-11\" htmlFor=\"first-name\">\n                Secret{\" \"}\n              </label>\n              <div className=\"wrap-input100 validate-input\">\n                <input\n                  id=\"first-name\"\n                  className=\"input100 text-center\"\n                  type=\"text\"\n                  name=\"first-name\"\n                  placeholder=\"Your secret!!\"\n                  onChange={(e) => this.setState({ esecret: e.target.value })}\n                />\n                <span className=\"focus-input100\"></span>\n              </div>\n            </div>\n            <div className=\"rs1 next\">\n              <label className=\"fs-18 text-center p-b-11\" htmlFor=\"password\">\n                PASSWORD\n              </label>\n              <div className=\"wrap-input100  validate-input\">\n                <input\n                  id=\"password\"\n                  className=\"input100 text-center\"\n                  type=\"password\"\n                  required=\"required\"\n                  disabled={!this.state.encrypt}\n                  name=\"password\"\n                  placeholder=\"Password\"\n                  onChange={(e) => this.setState({ epass: e.target.value })}\n                />\n                <span className=\"focus-input100\"></span>\n              </div>\n            </div>\n\n            <div style={{ cursor: \"pointer\", textAlign: \"left\" }} id=\"adv1\">\n            </div>\n            <label className=\" label-input100 m-t-10 \" htmlFor=\"message\">\n              MESSAGE\n            </label>\n            <div className=\"wrap-input100 validate-input\">\n              <textarea\n                id=\"message\"\n                className=\"input100\"\n                name=\"message\"\n                placeholder=\"This is a confidential message.\"\n                onChange={(e) => this.setState({ emsg: e.target.value })}\n                value={this.state.emsg}\n              ></textarea>\n              <span className=\"focus-input100\"></span>\n            </div>\n\n            {this.retBtn()}\n            {/* {(this.state.progress)?this.retProg():this.retBtn()} */}\n            {this.state.btn === \"Clear\" ? this.retRes() : null}\n\n            <p className=\" p-input100 text-center m-t-35\">REVEAL </p>\n            <hr className=\"hr-input100 m-t-2\" />\n            <div className=\"label-input100 flex-sa\"></div>\n            <label className=\"label-input100 m-l-2\" htmlFor=\"pass\">\n              PASSWORD\n            </label>\n\n            <div className=\"wrap-input100 \">\n              <input\n                id=\"pass\"\n                className=\"input100\"\n                type=\"text\"\n                name=\"first-name\"\n                placeholder=\"Password\"\n                onChange={(e) => this.setState({ dpass: e.target.value })}\n              />\n              <span className=\"focus-input100\"></span>\n            </div>\n            <label className=\" label-input100 m-l-2\" htmlFor=\"mess\">\n              Encrypted Message *\n            </label>\n            <div className=\"wrap-input100 \">\n              <textarea\n                id=\"mess\"\n                className=\"input100\"\n                name=\"mess\"\n                placeholder=\"Please enter your Encrypted Message\"\n                onChange={(e) => this.setState({ dmsg: e.target.value })}\n              ></textarea>\n              <span className=\"focus-input100\"></span>\n            </div>\n            <div className=\"container-contact100-form-btn\">\n              <button\n                className=\"contact100-form-btn\"\n                onClick={(e) => this.demsg(e)}\n              >\n                <span>\n                  Get Secret\n                  <i className=\"zmdi zmdi-arrow-right m-l-8\"></i>\n                </span>\n              </button>\n            </div>\n            <label className=\" label-input100 m-l-2 m-t-10\">Your Secret</label>\n            <p className=\" p-input100 text-center m-t-10 wraptext\">\n              <i> {this.state.dsecret} </i>\n            </p>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import $ from \"jquery\";\n\nexport default function main() {\n    var ad = document.getElementById(\"adv1\")\n    ad.addEventListener(\"click\", () => {\n        document.getElementById('option').classList.toggle(\"trans\")\n    })\n    /*==================================================================\n    [ Validate after type ]*/\n    $('.validate-input .input100').each(function(){\n        $(this).on('blur', function(){\n            if(validate(this) == false){\n                showValidate(this);\n            }\n            else {\n                $(this).parent().addClass('true-validate');\n            }\n        })    \n    })\n  \n  \n    /*==================================================================\n    [ Validate ]*/\n    var input = $('.validate-input .input100');\n\n    $('.validate-form').on('submit',function(){\n        var check = true;\n\n        for(var i=0; i<input.length; i++) {\n            if(validate(input[i]) == false){\n                showValidate(input[i]);\n                check=false;\n            }\n        }\n\n        return check;\n    });\n\n\n    $('.validate-form .input100').each(function(){\n        $(this).focus(function(){\n           hideValidate(this);\n           $(this).parent().removeClass('true-validate');\n        });\n    });\n\n     function validate (input) {\n        if($(input).attr('type') == 'email' || $(input).attr('name') == 'email') {\n            if($(input).val().trim().match(/^([a-zA-Z0-9_\\-\\.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([a-zA-Z0-9\\-]+\\.)+))([a-zA-Z]{1,5}|[0-9]{1,3})(\\]?)$/) == null) {\n                return false;\n            }\n        }\n        else {\n            if($(input).val().trim() == ''){\n                return false;\n            }\n        }\n    }\n\n    function showValidate(input) {\n        var thisAlert = $(input).parent();\n\n        $(thisAlert).addClass('alert-validate');\n\n        $(thisAlert).append('<span class=\"btn-hide-validate\">&#xf136;</span>')\n        $('.btn-hide-validate').each(function(){\n            $(this).on('click',function(){\n               hideValidate(this);\n            });\n        });\n    }\n\n    function hideValidate(input) {\n        var thisAlert = $(input).parent();\n        $(thisAlert).removeClass('alert-validate');\n        $(thisAlert).find('.btn-hide-validate').remove();\n    }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}